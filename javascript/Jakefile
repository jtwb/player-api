var fs      = require('fs'),
    util    = require('util');

var transformFile = function(inFileName, outFileName, transform) {

    fs.readFile(inFileName, 'utf-8', function(err, inFileData) {

        if (err) {
            console.log('Couldn\'t read ' + inFileName + '!');
            return;
        }

        fs.writeFile(outFileName, transform(inFileData), function(err) {

            if (err) {
                console.log('Couldn\'t write to ' + outFileName + '!');
            } else {
                console.log('Wrote ' + outFileName + '.');
            }
        });

    });
};

var stripAlert = function(text) {
    // strip first line
    return text.split(/\n/).splice(1).join('\n');
};


var withBuildDir = function(success) {

    var buildDirPath = './build';

    fs.stat(buildDirPath, function(err, data) {

        if (data) {

            success();
        } else {

            fs.mkdir('./build', '0777', function(err) {

                if (err) {
                    console.log('Couldn\'t create build directory');
                    return;
                }
                
                console.log('Created ./build');
                success();
            });
        }
    });
};

task('default',
    [],
    function() {

        withBuildDir(function() {
            transformFile(
                './froogaloop.min.js',
                './build/froogaloop.min.js',
                stripAlert
            );
        });
    }
);
