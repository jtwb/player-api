var fs      = require('fs'),
    util    = require('util');

var transformFile = function(inFileName, outFileName, transform) {

    fs.open(outFileName, 'w', function(err, outFD) {

        if (err) {
            console.log('Couldn\'t open ' + outFileName + ' for writing!');
            return false;
        }

        fs.readFile(inFileName, 'utf-8', function(err, inFileData) {

            if (err) {
                console.log('Couldn\'t read ' + inFileName + '!');
                return;
            }

            fs.write(outFD, transform(inFileData));

        });
    });
};

var stripAlert = function(text) {
    // strip first line
    return text.split(/\n/).splice(1);
};

task('default',
    [],
    function() {

        fs.mkdir('./build', '0777', function(err) {

            if (err) {
                console.log('Couldn\'t create build directory');
                return;
            }

            transformFile(
                './froogaloop.min.js',
                './build/froogaloop.min.js',
                stripAlert
            );
        });

    }
);
